[gd_scene load_steps=25 format=3 uid="uid://bi4ci4hll8i68"]

[ext_resource type="Script" path="res://Scripts/Components/Make Something Components/For Checking Something/CheckInArea.gd" id="1_cf1v5"]
[ext_resource type="PackedScene" uid="uid://cethri1s7o2nn" path="res://Scènes/Effects/healing_area.tscn" id="2_5vf2n"]
[ext_resource type="CapsuleMesh" uid="uid://dkcbu6w4m1gdi" path="res://Scènes/Effects/healing_area.tres" id="3_dhvw7"]

[sub_resource type="SphereShape3D" id="SphereShape3D_1q2ry"]
radius = 7.5

[sub_resource type="Animation" id="Animation_xwh36"]
resource_name = "CheckAreaKill"
length = 3.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, -0.5),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(0, 0, 0)]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(3),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}

[sub_resource type="Gradient" id="Gradient_88fh8"]
offsets = PackedFloat32Array(0.391304, 0.636646)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_udyaq"]
gradient = SubResource("Gradient_88fh8")
fill_from = Vector2(1, 0.82906)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ptb0n"]
texture = SubResource("GradientTexture2D_udyaq")
texture_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_c06kc"]
operator = 2

[sub_resource type="Gradient" id="Gradient_kipgp"]
offsets = PackedFloat32Array(0.574534, 0.611801, 0.677019, 0.76087, 0.826087, 0.875776)
colors = PackedColorArray(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_gemx4"]
gradient = SubResource("Gradient_kipgp")
fill_from = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_d0jbp"]
output_port_for_preview = 1
expanded_output_ports = [0]
texture = SubResource("GradientTexture2D_gemx4")
texture_type = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_bgb4c"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yo1js"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_30u01"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_hqsa3"]
parameter_name = "Speed"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_f3fiw"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_65ukr"]
parameter_name = "ExtraOpacity"
hint = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_p8mq6"]

[sub_resource type="VisualShader" id="VisualShader_v8v1s"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 Color : source_color;
uniform float ExtraOpacity : hint_range(0, 1);
uniform vec2 Speed;
uniform sampler2D tex_frg_2 : source_color;
uniform sampler2D tex_frg_10 : source_color;



void fragment() {
// ColorParameter:7
	vec4 n_out7p0 = Color;


// FloatParameter:8
	float n_out8p0 = ExtraOpacity;


// Input:4
	float n_out4p0 = TIME;


// Vector2Parameter:6
	vec2 n_out6p0 = Speed;


// VectorOp:5
	vec2 n_out5p0 = vec2(n_out4p0) * n_out6p0;


// UVFunc:3
	vec2 n_in3p1 = vec2(1.00000, 1.00000);
	vec2 n_out3p0 = n_out5p0 * n_in3p1 + UV;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out3p0);
	float n_out2p1 = n_out2p0.r;


// FloatOp:9
	float n_out9p0 = n_out8p0 + n_out2p1;


// Texture2D:10
	vec4 n_out10p0 = texture(tex_frg_10, UV);


// FloatOp:11
	float n_out11p0 = n_out9p0 * n_out10p0.x;


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out11p0;


}
"
flags/unshaded = true
nodes/fragment/0/position = Vector2(760, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_d0jbp")
nodes/fragment/2/position = Vector2(-140, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeUVFunc_bgb4c")
nodes/fragment/3/position = Vector2(-420, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_yo1js")
nodes/fragment/4/position = Vector2(-1000, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_30u01")
nodes/fragment/5/position = Vector2(-620, 280)
nodes/fragment/6/node = SubResource("VisualShaderNodeVec2Parameter_hqsa3")
nodes/fragment/6/position = Vector2(-1020, 380)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_f3fiw")
nodes/fragment/7/position = Vector2(340, -20)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_65ukr")
nodes/fragment/8/position = Vector2(-260, 780)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_p8mq6")
nodes/fragment/9/position = Vector2(220, 400)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture_ptb0n")
nodes/fragment/10/position = Vector2(120, 740)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_c06kc")
nodes/fragment/11/position = Vector2(480, 520)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 5, 0, 3, 2, 4, 0, 5, 0, 6, 0, 5, 1, 7, 0, 0, 0, 8, 0, 9, 0, 2, 1, 9, 1, 9, 0, 11, 0, 10, 0, 11, 1, 11, 0, 0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nxqeq"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_v8v1s")
shader_parameter/Color = Color(0.133333, 0.443137, 0.709804, 1)
shader_parameter/ExtraOpacity = 0.115
shader_parameter/Speed = Vector2(2, 2)

[sub_resource type="CapsuleMesh" id="CapsuleMesh_4o2kh"]
material = SubResource("ShaderMaterial_nxqeq")
radius = 7.5
height = 15.0

[sub_resource type="Animation" id="Animation_sgkka"]
resource_name = "CheckInArea"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("CollisionShape3D/HealingArea:mesh")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [ExtResource("3_dhvw7"), SubResource("CapsuleMesh_4o2kh")]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"Call_Event"
}]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("CollisionShape3D/HealingArea:scale")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(0.2, 0.2, 0.2)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ou6eo"]
_data = {
"CheckAreaKill": SubResource("Animation_xwh36"),
"CheckInArea": SubResource("Animation_sgkka")
}

[node name="Simple Area" type="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0)
script = ExtResource("1_cf1v5")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_1q2ry")

[node name="HealingArea" parent="CollisionShape3D" instance=ExtResource("2_5vf2n")]
unique_name_in_owner = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_ou6eo")
}
